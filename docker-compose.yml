services:
  eureka-server:
    build:
      context: ./server-registry
    container_name: e4u-server-registry
    ports:
      - "8761:8761"
    networks:
      - backend

  vocabulary-db:
    image: postgres:15
    container_name: e4u-vocabulary-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${VOCABULARY_SERVICE_DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - vocabulary-db-data:/var/lib/postgresql/data
    networks:
      - backend

  vocabulary-service:
    build:
      context: ./vocabulary-service
    container_name: e4u-vocabulary-service
    ports:
      - "8081:8081"
    depends_on:
      - vocabulary-db
      - eureka-server
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      VOCABULARY_SERVICE_DB_HOST: ${VOCABULARY_SERVICE_DB_HOST}
      VOCABULARY_SERVICE_DB_PORT: ${VOCABULARY_SERVICE_DB_PORT}
      VOCABULARY_SERVICE_DB_NAME: ${VOCABULARY_SERVICE_DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - backend

  user-vocabulary-db:
    image: postgres:15
    container_name: e4u-user-vocabulary-db
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: ${USER_VOCABULARY_SERVICE_DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - user-vocabulary-db-data:/var/lib/postgresql/data
    networks:
      - backend

  user-vocabulary-service:
    build:
      context: ./user-vocabulary-service
    container_name: e4u-user-vocabulary-service
    ports:
      - "8082:8082"
    depends_on:
      - user-vocabulary-db
      - eureka-server
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      USER_VOCABULARY_SERVICE_DB_HOST: ${USER_VOCABULARY_SERVICE_DB_HOST}
      USER_VOCABULARY_SERVICE_DB_PORT: ${USER_VOCABULARY_SERVICE_DB_PORT}
      USER_VOCABULARY_SERVICE_DB_NAME: ${USER_VOCABULARY_SERVICE_DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - backend

  test-db:
    image: postgres:15
    container_name: e4u-test-db
    ports:
      - "5434:5432"
    environment:
      POSTGRES_DB: ${TEST_SERVICE_DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - test-db-data:/var/lib/postgresql/data
    networks:
      - backend

  test-service:
    build:
      context: ./test-service
    container_name: e4u-test-service
    ports:
      - "8083:8083"
    depends_on:
      - test-db
      - eureka-server
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      TEST_SERVICE_DB_HOST: ${TEST_SERVICE_DB_HOST}
      TEST_SERVICE_DB_PORT: ${TEST_SERVICE_DB_PORT}
      TEST_SERVICE_DB_NAME: ${TEST_SERVICE_DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - backend

  user-test-db:
    image: postgres:15
    container_name: e4u-user-test-db
    ports:
      - "5435:5432"
    environment:
      POSTGRES_DB: ${USER_TEST_SERVICE_DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - user-test-db-data:/var/lib/postgresql/data
    networks:
      - backend

  user-test-service:
    build:
      context: ./user-test-service
    container_name: e4u-user-test-service
    ports:
      - "8084:8084"
    depends_on:
      - user-test-db
      - eureka-server
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      USER_TEST_SERVICE_DB_HOST: ${USER_TEST_SERVICE_DB_HOST}
      USER_TEST_SERVICE_DB_PORT: ${USER_TEST_SERVICE_DB_PORT}
      USER_TEST_SERVICE_DB_NAME: ${USER_TEST_SERVICE_DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - backend

  user-db:
    image: postgres:15
    container_name: e4u-user-db
    ports:
      - "5436:5432"
    environment:
      POSTGRES_DB: ${USER_SERVICE_DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - user-db-data:/var/lib/postgresql/data
    networks:
      - backend

  user-service:
    build:
      context: ./user-service
    container_name: e4u-user-service
    ports:
      - "8085:8085"
    depends_on:
      - user-db
      - eureka-server
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      USER_SERVICE_DB_HOST: ${USER_SERVICE_DB_HOST}
      USER_SERVICE_DB_PORT: ${USER_SERVICE_DB_PORT}
      USER_SERVICE_DB_NAME: ${USER_SERVICE_DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - backend

  file-service:
    build:
      context: ./file-service
    container_name: e4u-file-service
    ports:
      - "8086:8086"
    depends_on:
      - eureka-server
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
    networks:
      - backend

  redis:
    image: redis:7.2
    container_name: e4u-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - backend

  auth-db:
    image: postgres:15
    container_name: e4u-auth-db
    ports:
      - "5437:5432"
    environment:
      POSTGRES_DB: ${AUTH_SERVICE_DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - auth-db-data:/var/lib/postgresql/data
    networks:
      - backend

  auth-service:
    build:
      context: ./auth-service
    container_name: e4u-auth-service
    ports:
      - "8087:8087"
    depends_on:
      - auth-db
      - redis
      - eureka-server
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      AUTH_SERVICE_DB_HOST: ${AUTH_SERVICE_DB_HOST}
      AUTH_SERVICE_DB_PORT: ${AUTH_SERVICE_DB_PORT}
      AUTH_SERVICE_DB_NAME: ${AUTH_SERVICE_DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - backend

  api-gateway:
    build:
      context: ./api-gateway
    container_name: e4u-api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - vocabulary-service
      - user-vocabulary-service
      - test-service
      - eureka-server
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
    networks:
      - backend

volumes:
  vocabulary-db-data:
  user-vocabulary-db-data:
  test-db-data:
  user-test-db-data:
  user-db-data:
  redis-data:
  auth-db-data:

networks:
  backend: